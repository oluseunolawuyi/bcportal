<?php
date_default_timezone_set("Africa/Lagos");

$server_name = $_SERVER["SERVER_NAME"];
$directory = (isset($_SERVER["HTTPS"]) ? "https" : "http") . "://" . $server_name . "/bcportal/";
function directory() {
global $directory;
echo $directory;
}
$parent_domain = "riskcontrolnigeria.com";
$domain = "riskcontrolnigeria.com";
$gen_name = "BC Portal";
$full_gen_name = "BC Portal";
$gen_email = "info@riskcontrolnigeria.com";
$gen_phone = "+234 1 295 4283";
$date = date("Y-m-d");
$date_time = date("Y-m-d H:i:s");
$ticket_id = date("YmdHis");
$rand_no = rand(1000,9999);
$foot_note = "<b>Note:</b> This email is autogenerated. Please do not reply.";
$regards = "<p>&nbsp;</p><p>Regards,<br>{$gen_name} Team.</p>";
$admin = "users/";
$error = 1;
$rand = rand(1001,9999);

$db = new DB();
$db->connect();

$id = (isset($_SESSION["login"]))?$_SESSION["login"]:"";
$username = (!empty($id))?in_table("username","reg_users","WHERE id = '{$id}'","username"):"";
$user_email = (!empty($id))?in_table("email","reg_users","WHERE id = '{$id}'","email"):"";
$user_name = (!empty($id))?in_table("name","reg_users","WHERE id = '{$id}'","name"):"";
$is_admin = (!empty($id))?in_table("admin","reg_users","WHERE id = '{$id}'","admin"):"";
$is_super_admin = (!empty($id))?in_table("super_admin","reg_users","WHERE id = '{$id}'","super_admin"):"";
$is_client = (!empty($id))?in_table("client","reg_users","WHERE id = '{$id}'","client"):"";
$is_agent = (!empty($id))?in_table("agent","reg_users","WHERE id = '{$id}'","agent"):"";

function count_rows($data) {
return mysqli_num_rows($data);
}
function fetch_data($data) {
return mysqli_fetch_array($data, MYSQLI_BOTH);
}
function in_table($col,$table,$where_col,$return) {
    $result = 0;
    $db = new DB();
    $db->connect();

    $vend = $db->query("SELECT {$col} FROM {$table} {$where_col}");
    if (count_rows($vend) > 0) {
        $Row = fetch_data($vend);
        $result = $Row[$return];
    }
    return $result;
}

function admin_id($data){
$result = "" . $data;
return $result;
}
function agent_id($data){
$result = "" . $data;
return $result;
}
function client_id($data){
$result = "" . $data;
return $result;
}
function sub_date($data){
return date_format(date_create($data),"l F jS, Y");
}
function min_sub_date($data){
return date_format(date_create($data),"d/m/Y");
}
function full_date($data){
return date_format(date_create($data),"l F jS, Y h:i:s A");
}
function min_full_date($data){
return date_format(date_create($data),"d/m/Y h:i:s A");
}

function test_input($data) {
global $db;
$data = trim($data);
$data = preg_replace('/\s+/', ' ', $data);
$data = htmlentities($data, ENT_QUOTES);
$data = mysqli_real_escape_string($db->connection,$data);
return $data;
}
function tp_input($data) {
$data = ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]))?test_input($_POST[$data]):"";
return $data;
}
function np_input($data) {
$data = ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]))?testTotal($_POST[$data]):"";
return $data;
}
function tr_input($data) {
$data = (isset($_REQUEST[$data]) && !empty($_REQUEST[$data]))?test_input($_REQUEST[$data]):"";
return $data;
}
function nr_input($data) {
$data = (isset($_REQUEST[$data]) && !empty($_REQUEST[$data]))?testTotal($_REQUEST[$data]):"";
return $data;
}
function tp_preview($data) {
$data = ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]))?test_input_preview($_POST[$data]):"";
return $data;
}
function tp_html($data) {
$data = ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]))?test_input_html($_POST[$data]):"";
return $data;
}
function check_inputted($data="", $sub_data = ""){
global $error;
echo ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]) && $error == 1)?trim($_POST[$data]):$sub_data;
}
function check_checked($data="", $sub_data = "", $main_data = ""){
global $error;
echo ((($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]) && $_POST[$data] == $sub_data) or (empty($_POST[$data]) && $main_data == $sub_data)) && $error == 1)?" checked":"";
}
function check_selected($data = "", $sub_data = "", $main_data = ""){
global $error;
echo ((($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]) && $_POST[$data] == $sub_data) or (empty($_POST[$data]) && $main_data == $sub_data)) && $error == 1)?" selected":"";
}
function check_selected2($data = "", $sub_data = ""){
global $error;
echo (!empty($data) && $data == $sub_data && $error == 1)?" selected":"";
}
function current_page($data){
$result = (basename($_SERVER["PHP_SELF"]) == "{$data}.php")?"current":"";
return $result;
}
function conf_count($table, $col){
$val = in_table("COUNT(id) AS Total",$table,"WHERE {$col}='0'","Total");
return $val;
}
function get_table_data($table, $data_id, $data){
$val = in_table($data,$table,"WHERE id='{$data_id}'",$data);
return $val;
}
function date_valid($date){
if(strpos($date,"-") > 0){
$date_array = explode("-",$date);
$day = (int) $date_array[2];
$month = (int) $date_array[1];
$year = (int) $date_array[0];
$det_date = checkdate($month, $day, $year);
if ($det_date){
return TRUE; 
}else{
return FALSE;
}
}else{
return FALSE;
}
}

function seo_link($data) {
$data = html_entity_decode($data,ENT_QUOTES);
$data = strip_tags($data);
$data = trim($data);
$data = strtolower($data);
$data = preg_replace("/\s+/", " ", $data);
$data = preg_replace("#[^0-9a-z' ]#i", "", $data);
$data = str_replace(" ","-", $data);
return $data;
}
function title_link($data) {
$data = html_entity_decode($data,ENT_QUOTES);
$data = strip_tags($data);
$data = trim($data);
$data = preg_replace("/\s+/", " ", $data);
$data = str_replace("-"," ", $data);
$data = preg_replace("#[^0-9a-z' ]#i", "", $data);
$data = $data . " ";
$data_array = explode(" ",$data);
$data = "";
foreach($data_array as $value){
if(!empty($value)){
$data = $data . ucfirst($value) . " ";
}
}
$data = trim($data);
return $data;
}

function redirect($filename){
if(!headers_sent()){
header('Location: '.$filename);
}else{
?>
<script type="text/javascript">
<!--
window.location.href="<?php echo $filename; ?>";
//-->
</script>
<noscript>
<meta http-equiv="refresh" content="0;url=<?php echo $filename; ?>" />
</noscript>
<?php
}
}

////////======================Role Functions=============////////////////

function role_exists($data_id, $data){
global $edit;
$column = in_table("$data","role_management","WHERE id='{$data_id}'","$data");
if(!empty($edit) && !empty($column)){
echo " checked";
}
}

function check_admin($data){
global $is_admin, $is_super_admin, $id;
$result = 0;
if(!empty($is_admin) && empty($is_super_admin)){
$role_id = in_table("role_id","reg_users","WHERE id='{$id}'","role_id");
$result = get_table_data("role_management", $role_id, $data);
}else if(!empty($is_admin) && !empty($is_super_admin)){
$result = 1;
}
return $result;
}
function admin_role_redirect($data){
global $directory, $admin;
if(check_admin($data) != 1){
redirect("{$directory}{$admin}");
}
}

function check_client(){
global $is_client;
$result = 0;
if(!empty($is_client)){
$result = 1;
}
return $result;
}
function client_role_redirect(){
global $directory, $admin;
if(check_client() != 1){
redirect("{$directory}{$admin}");
}
}

function check_agent(){
global $is_agent;
$result = 0;
if(!empty($is_agent)){
$result = 1;
}
return $result;
}
function agent_role_redirect(){
global $directory, $admin;
if(check_agent() != 1){
redirect("{$directory}{$admin}");
}
}
///////////========================================================//////////

function search_option($data, $allow_check=""){
$result = "";
$current_page = basename($_SERVER["PHP_SELF"],".php");
if(isset($_POST[$data])){
$result = $_POST[$data];
$_SESSION[$current_page][$data] = $_POST[$data];
}else if(!empty($allow_check)){
$result = "";
$_SESSION[$current_page][$data] = $result;
}else if(isset($_SESSION[$current_page][$data]) && !empty($_SESSION[$current_page][$data])){
$result = $_SESSION[$current_page][$data];
}
return test_input($result);
}

function search_checked_option($data, $allow_check=""){
$result = "";
$current_page = basename($_SERVER["PHP_SELF"],".php");
if(isset($_POST[$data])){
$result = $_POST[$data];
$_SESSION[$current_page][$data] = $result;
}else if(!empty($allow_check)){
$result = "";
$_SESSION[$current_page][$data] = $result;
}else if(isset($_SESSION[$current_page][$data]) && !empty($_SESSION[$current_page][$data])){
$result = $_SESSION[$current_page][$data];
}
return test_input($result);
}

///=========================Mail Functions===========//////
function message_template(){
global $subject, $message, $foot_note, $regards, $directory, $domain, $gen_email, $gen_phone;
$result = "
<html>
<head>
<title>{$subject}</title>
</head>
<body>

<div style=\"background:#f9f9f9 !important; padding:10px !important; font-family:Arial, Helvetica, sans-serif; font-size:14px !important;\">
<div style=\"margin:auto !important; width:100% !important; max-width:800px !important;\">

<div style=\"padding:10px !important; padding-top:30px !important;\">
<img src=\"{$directory}images/risk-control-logo.jpg\">
</div>

<div style=\"min-height:300px !important; padding:10px !important; background:#fff !important;\">
{$message}
{$regards}
</div>

<p style=\"font-size:14px !important;\">
<span style=\"font-weight:bold !important;\">Email:</span> {$gen_email},<br>
<span style=\"font-weight:bold !important;\">Phone:</span> {$gen_phone},<br>
<span style=\"font-weight:bold !important;\">Website:</span> <a href=\"{$directory}\" style=\"color:#f33 !important; text-decoration:none !important;\">{$domain}</a>.
</p>";
$result .= (!empty($foot_note))?"<p style=\"background:#ddd !important;font-size:12px !important; padding:10px !important; overflow:hidden !important;\">{$foot_note}</p>":"";
$result .= "</div>
</div>

</body>
</html>";
return $result;
}

///////////===============Mail===================///////////////
function multi_attach_mail($to, $subject, $message, $senderMail, $senderName, $files){

    $from = $senderName." <".$senderMail.">"; 
    $headers = "From: $from";

    // boundary 
    $semi_rand = md5(time()); 
    $mime_boundary = "==Multipart_Boundary_x{$semi_rand}x"; 

    // headers for attachment 
    $headers .= "\nMIME-Version: 1.0\n" . "Content-Type: multipart/mixed;\n" . " boundary=\"{$mime_boundary}\""; 

    // multipart boundary 
    $message = "--{$mime_boundary}\n" . "Content-Type: text/html; charset=\"UTF-8\"\n" .
    "Content-Transfer-Encoding: 7bit\n\n" . $message . "\n\n"; 

   // preparing attachments
    if(count($files) > 0){
        for($i=0;$i<count($files);$i++){
            if(is_file($files[$i])){
                $message .= "--{$mime_boundary}\n";
                $fp =    @fopen($files[$i],"rb");
                $data =  @fread($fp,filesize($files[$i]));

                @fclose($fp);
                $data = chunk_split(base64_encode($data));
                $message .= "Content-Type: application/octet-stream; name=\"".basename($files[$i])."\"\n" . 
                "Content-Description: ".basename($files[$i])."\n" .
                "Content-Disposition: attachment;\n" . " filename=\"".basename($files[$i])."\"; size=".filesize($files[$i]).";\n" . 
                "Content-Transfer-Encoding: base64\n\n" . $data . "\n\n";
            }
        }
    }

    $message .= "--{$mime_boundary}--";
    $returnpath = "-f" . $senderMail;

	return send_mail_attachment($to, $subject, $message, $headers, $returnpath);
}

function send_mail($no=""){
global $to, $subject, $message, $headers;

$message = wordwrap($message,70);
// Always set content-type when sending HTML email
$headers2 = $headers;
$headers = "MIME-Version: 1.0" . "\r\n";
$headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
$headers .= "From: {$headers2}" . "\r\n";
$headers .= ($no == 1)?"BCC: crm@riskcontrolnigeria.com, webmaster@riskcontrolnigeria.com" . "\r\n":"";

$url = "http://riskcontrolnigeria.biz/get-remote/";
$data = array("to" => "$to", "subject" => "$subject", "message" => "$message", "headers" => "$headers");
$risk_content = http_build_query($data);

// use key 'http' even if you send the request to https://...
$options = array("http" => array(
  	"header" => "Content-Type: application/x-www-form-urlencoded\r\n".
                    "Content-Length: " . strlen($risk_content) . "\r\n".
                    "User-Agent:MyAgent/1.0\r\n",
    "method"  => "POST",
    "content" => $risk_content
));

$context = stream_context_create($options);

$result = file_get_contents($url, false, $context);
return $result;

}

function send_mail_attachment($to, $subject, $message, $headers, $returnpath, $no=""){

$headers .= ($no == 1)?"\nBCC: crm@riskcontrolnigeria.com, webmaster@riskcontrolnigeria.com" . "\r\n":"";

$url = "http://riskcontrolnigeria.biz/get-remote/";
$data = array("to" => "$to", "subject" => "$subject", "message" => "$message", "headers" => "$headers", "returnpath" => "$returnpath");

// use key 'http' even if you send the request to https://...
$options = array("http" => array(
    "method"  => "POST",
	"header" => "Content-Type: application/x-www-form-urlencoded\r\n",
    "content" => http_build_query($data)
));

$context = stream_context_create($options);

$result = file_get_contents($url, false, $context);
return $result;

}

///==============Image Upload Function=========================///
function upload_single_image($feild_name, $uniq_name_par, $url, $width, $height){

global $file_name, $rand_no;

$file_name = $_FILES[$feild_name]["name"]; 
$file_temp_name = $_FILES[$feild_name]["tmp_name"];
$info   = getimagesize($file_temp_name);
$file_size = $_FILES[$feild_name]["size"];
$file_error_message = $_FILES[$feild_name]["error"];
$file_name_2_array = explode(".", $file_name);
$file_extension = end($file_name_2_array);

if (!$file_temp_name) {
    echo "<div class=\"not-success\">ERROR: Please browse for a file before clicking the upload button.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
    exit();
} 
else if($file_size > 5242880) {
    echo "<div class=\"not-success\">ERROR: Your file was larger than 5 Megabytes in size.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
    unlink($file_temp_name);
    exit();
}
else if (!preg_match("/.(gif|GIF|jpg|JPG|png|PNG|jpeg|JPEG)$/i", $file_name) ) {
     echo "<div class=\"not-success\">ERROR: Your image was not .gif, .jpg, .jpeg, or .png.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
     unlink($file_temp_name);
     exit();
}
else if ($file_error_message == 1) {
    echo "<div class=\"not-success\">ERROR: An error occured while processing the file. Try again.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
    exit();
}
else if ($info[2] != 1 && $info[2] != 2 && $info[2] != 3) {
     echo "<div class=\"not-success\">ERROR: Your image was not .gif, .jpg, .jpeg, or .png.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
     exit();
}

foreach (glob("{$url}{$uniq_name_par}*.*") as $filename) {
unlink($filename);
}

$file_name = "1_{$uniq_name_par}{$rand_no}.{$file_extension}";
$move_file = move_uploaded_file($file_temp_name, "{$url}{$file_name}");
if ($move_file != true) {
    echo "<div class=\"not-success\">ERROR: File not uploaded. Try again.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
    unlink($file_temp_name);
    exit();
}

$target_file = "{$url}{$file_name}";
$resized_file = "{$url}{$uniq_name_par}{$rand_no}.{$file_extension}";
image_resize($target_file, $resized_file, $file_extension, $width, $height);

unlink($target_file);

}

function rename_single_file($old_par, $new_dir, $new_file){
global $file_name;
if(file_exists($old_par)){
copy($old_par, $new_dir . $new_file);
unlink($old_par);
$file_name = $new_file;
}
}

///================================================
function page_numbers(){
global $result, $per_view, $page_link, $link_suffix, $style_class, $center_pages, $pn, $sub1, $last_page, $count, $add_attr;
$count = (empty($count))?count_rows($result):$count;

///////////////////////////////////////////////////////
$pn = (isset($_REQUEST["pn"]) && !empty($_REQUEST["pn"]))?preg_replace("#[^0-9]#i", "", $_REQUEST["pn"]):1;
$total = $count;

$last_page = ceil($total / $per_view);

if ($pn < 1) {
$pn = 1;
} else if ($pn > $last_page && !empty($last_page)) {
$pn = $last_page;
}

$center_pages = "";
$sub4 = $pn - 4;
$sub3 = $pn - 3;
$sub1 = $pn - 1;
$sub2 = $pn - 2;
$add1 = $pn + 1;
$add2 = $pn + 2;
$add3 = $pn + 3;
$add4 = $pn + 4;

$center_pages .= ($pn>1 && $last_page>1)?"<a href=\"{$page_link}{$sub1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">Previous</a>":"";
$center_pages .= ($sub4>0 && $add1>$last_page && $last_page>1)?"<a href=\"{$page_link}{$sub4}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub4}</a>":"";
$center_pages .= ($sub3>0 && $add2>$last_page && $last_page>1)?"<a href=\"{$page_link}{$sub3}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub3}</a>":"";
$center_pages .= ($sub2>0 && $last_page>1)?"<a href=\"{$page_link}{$sub2}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub2}</a>":"";
$center_pages .= ($sub1>0 && $last_page>1)?"<a href=\"{$page_link}{$sub1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub1}</a>":"";
$center_pages .= ($last_page>1)?"<a href=\"{$page_link}{$pn}{$link_suffix}\" {$add_attr} class=\"current {$style_class}\">{$pn}</a>":"";
$center_pages .= ($add1<=$last_page && $last_page>1)?"<a href=\"{$page_link}{$add1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add1}</a>":"";
$center_pages .= ($add2<=$last_page && $last_page>1)?"<a href=\"{$page_link}{$add2}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add2}</a>":"";
$center_pages .= ($sub2<1 && $add3<=$last_page && $last_page>1)?"<a href=\"{$page_link}{$add3}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add3}</a>":"";
$center_pages .= ($sub1<1 && $add4<=$last_page && $last_page>1)?"<a href=\"{$page_link}{$add4}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add4}</a>":"";
$center_pages .= ($pn<$last_page && $last_page>1)?"<a href=\"{$page_link}{$add1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">Next</a>":"";
}
////====================================================

/////==============Calculate Remaining Days==============/////
function days_remaining($data, $abbrevation="", $status=""){
global $date;
$exp = (!empty($abbrevation))?"Exp. - ":"Expired by ";
$datetime1 = new DateTime($data);
$datetime2 = new DateTime($date);
$difference = $datetime1->diff($datetime2);
$days_remaining = "";

if($status != "COMPLETED"){

if($data > $date){

if($difference->days <= 7){
$days_remaining = ($difference->days == 1)?"<div class=\"btn btn-danger\">" . formatQty($difference->days) . " Day</div>":"<div class=\"btn btn-danger\">" . formatQty($difference->days) . " Days</div>";
}else{
$days_remaining = "<div class=\"btn btn-primary\">" . formatQty($difference->days) . " Days</div>";
}

}else{

if($difference->days < 90){
$days_remaining = ($difference->days == 1)?"<div class=\"btn btn-warning\">{$exp}" . formatQty($difference->days) . " Day</div>":"<div class=\"btn btn-warning\">{$exp}" . formatQty($difference->days) . " Days</div>";
}else{
$days_remaining = "<div class=\"btn btn-danger\">CLOSED OUT</div>";
}

}

}else{
$days_remaining = "<div class=\"btn btn-success\">COMPLETED</div>";
}

return $days_remaining;
}

///================Detect Browser===================///////
function det_browser($data){
global $detect;
$result = "";
$result = ( $detect->isMobile() && !$detect->isTablet() ) ? "" : $data;
return $result;
}

//////===========Texts Functions==============//////

function decode_data($data){
return html_entity_decode($data, ENT_QUOTES);
}

function break_long($data, $prefix="", $suffix=""){
$broken_data = $prefix . wordwrap($data, 15, "<br />", true) . $suffix;
return $broken_data;
}

function testTotal($amount){
$amountReturn = preg_replace('#[^0-9.]#i', '', $amount);
$amountReturn = test_input($amountReturn);
$amountReturn = str_replace(",","",$amountReturn);
$amountReturn = str_replace("-","",$amountReturn);
$amountPos = strpos($amountReturn,".");
if($amountPos > 0){
$amountReturn = substr($amountReturn,0,$amountPos+3);
}
return $amountReturn;
}

function testQty($amount){
$amountReturn = preg_replace('#[^0-9]#i', '', $amount);
$amountReturn = test_input($amountReturn);
$amountReturn = str_replace(",","",$amountReturn);
$amountReturn = str_replace("-","",$amountReturn);
$amountPos = strpos($amountReturn,".");
if($amountPos > 0){
$amountReturn = substr($amountReturn,0,$amountPos);
}
return $amountReturn;
}

function formatNumber($amount){
$amountOriginal = "{$amount}";
if($amountOriginal != ""){
$sign_left = ($amountOriginal < 0)?"(":"";
$sign_right = ($amountOriginal < 0)?")":"";
$amountOriginal = $sign_left . number_format(abs($amountOriginal), 2, '.', ',') . $sign_right;
}
return $amountOriginal;
}

function formatQty($amount){
$amountOriginal = "{$amount}";
if($amountOriginal != ""){
$amountOriginal = number_format($amountOriginal, 0, '', ',');
}
return $amountOriginal;
}
?>