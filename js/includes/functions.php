<?php
$directory = "http://localhost/leviproject1/";
function directory() {
global $directory;
echo $directory;
}
$domain = "reliancewisdom.com";
$gen_name = "Levi Project 1";
$full_gen_name = "Levi Project 1";
$gen_email = "contact@reliancewisdom.com";
$gen_phone = "+234 (0)803 672 9769";
$date = date("Y-m-d");
$date_time = date("Y-m-d H:i:s");
$ticket_id = date("YmdHis");
$rand_no = rand(1000,9999);
$foot_note = "<b>Note:</b> This email is autogenerated. Please do not reply.";
$regards = "<p>&nbsp;</p><p>Regards,<br>{$gen_name} Team.</p>";
$privates = "privates/";
$admin = "members/";
$error = 1;
$rand = rand(1001,9999);

$db = new DB();
$db->connect();

$id = (isset($_SESSION["login"]))?$_SESSION["login"]:"";
$username = (!empty($id))?in_table("username","reg_users","WHERE id = '{$id}'","username"):"";
$user_email = (!empty($id))?in_table("email","reg_users","WHERE id = '{$id}'","email"):"";
$user_name = (!empty($id))?in_table("name","reg_users","WHERE id = '{$id}'","name"):"";
$is_admin = (!empty($id))?in_table("is_admin","reg_users","WHERE id = '{$id}'","is_admin"):"";

function count_rows($data) {
return mysqli_num_rows($data);
}
function fetch_data($data) {
return mysqli_fetch_array($data, MYSQLI_BOTH);
}
function in_table($col,$table,$where_col,$return) {
    $result = 0;
    $db = new DB();
    $db->connect();

    $vend = $db->query("SELECT {$col} FROM {$table} {$where_col}");
    if (count_rows($vend) > 0) {
        $Row = fetch_data($vend);
        $result = $Row[$return];
    }
    return $result;
}

function admin_id($data){
$result = "EA" . $data;
return $result;
}
function sub_date($data){
return date_format(date_create($data),"l F jS, Y");
}
function min_sub_date($data){
return date_format(date_create($data),"d/m/Y");
}
function full_date($data){
return date_format(date_create($data),"l F jS, Y h:i:s A");
}
function min_full_date($data){
return date_format(date_create($data),"d/m/Y h:i:s A");
}

function test_input($data) {
global $db;
$data = trim($data);
$data = preg_replace('/\s+/', ' ', $data);
$data = htmlentities($data, ENT_QUOTES);
$data = mysqli_real_escape_string($db->connection,$data);
return $data;
}
function tp_input($data) {
$data = ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]))?test_input($_POST[$data]):"";
return $data;
}
function np_input($data) {
$data = ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]))?testQty($_POST[$data]):"";
return $data;
}
function tr_input($data) {
$data = (isset($_REQUEST[$data]) && !empty($_REQUEST[$data]))?test_input($_REQUEST[$data]):"";
return $data;
}
function nr_input($data) {
$data = (isset($_REQUEST[$data]) && !empty($_REQUEST[$data]))?testQty($_REQUEST[$data]):"";
return $data;
}
function tp_preview($data) {
$data = ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]))?test_input_preview($_POST[$data]):"";
return $data;
}
function tp_html($data) {
$data = ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]))?test_input_html($_POST[$data]):"";
return $data;
}
function check_inputted($data="", $sub_data = ""){
global $error;
echo ($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]) && $error == 1)?trim($_POST[$data]):$sub_data;
}
function check_checked($data="", $sub_data = "", $main_data = ""){
global $error;
echo ((($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]) && $_POST[$data] == $sub_data) or (empty($_POST[$data]) && $main_data == $sub_data)) && $error == 1)?" checked":"";
}
function check_selected($data = "", $sub_data = "", $main_data = ""){
global $error;
echo ((($_SERVER["REQUEST_METHOD"] == "POST" && !empty($_POST[$data]) && $_POST[$data] == $sub_data) or (empty($_POST[$data]) && $main_data == $sub_data)) && $error == 1)?" selected":"";
}
function current_page($data){
$result = (basename($_SERVER["PHP_SELF"]) == "{$data}.php")?"current":"";
return $result;
}
function conf_count($table, $col){
$val = in_table("COUNT(id) AS Total",$table,"WHERE {$col}='0'","Total");
return $val;
}
function get_table_data($table, $data_id, $data){
$val = in_table($data,$table,"WHERE id='{$data_id}'",$data);
return $val;
}
function date_valid($date){
if(strpos($date,"-") > 0){
$date_array = explode("-",$date);
$day = (int) $date_array[2];
$month = (int) $date_array[1];
$year = (int) $date_array[0];
$det_date = checkdate($month, $day, $year);
if ($det_date){
return TRUE; 
}else{
return FALSE;
}
}else{
return FALSE;
}
}

function seo_link($data) {
$data = html_entity_decode($data,ENT_QUOTES);
$data = strip_tags($data);
$data = trim($data);
$data = strtolower($data);
$data = preg_replace("/\s+/", " ", $data);
$data = preg_replace("#[^0-9a-z' ]#i", "", $data);
$data = str_replace(" ","-", $data);
return $data;
}
function title_link($data) {
$data = html_entity_decode($data,ENT_QUOTES);
$data = strip_tags($data);
$data = trim($data);
$data = preg_replace("/\s+/", " ", $data);
$data = str_replace("-"," ", $data);
$data = preg_replace("#[^0-9a-z' ]#i", "", $data);
$data = $data . " ";
$data_array = explode(" ",$data);
$data = "";
foreach($data_array as $value){
if(!empty($value)){
$data = $data . ucfirst($value) . " ";
}
}
$data = trim($data);
return $data;
}

function redirect($filename){
if(!headers_sent()){
header('Location: '.$filename);
}else{
?>
<script type="text/javascript">
<!--
window.location.href="<?php echo $filename; ?>";
//-->
</script>
<noscript>
<meta http-equiv="refresh" content="0;url=<?php echo $filename; ?>" />
</noscript>
<?php
}
}

function check_admin($data=""){
global $directory, $admin, $is_admin;
if($is_admin == 0){
redirect("{$directory}{$admin}{$data}");
}
}

function check_user($data=""){
global $directory, $admin, $is_admin;
if($is_admin == 1){
redirect("{$directory}{$admin}{$data}");
}
}

function search_option($data){
$result = "";
$current_page = basename($_SERVER["PHP_SELF"],".php");
$submitted_data = tr_input($data);
if(!empty($submitted_data)){
$result = $submitted_data;
$_SESSION[$current_page][$data] = $submitted_data;
}else if(isset($_SESSION[$current_page][$data]) && !empty($_SESSION[$current_page][$data])){
$result = $_SESSION[$current_page][$data];
}
return $result;
}

///=========================Mail Functions===========//////
function message_template(){
global $subject, $message, $foot_note, $regards, $directory, $domain, $gen_email, $gen_phone;
$result = "
<html>
<head>
<title>{$subject}</title>
</head>
<body>

<div style=\"background:#f9f9f9 !important; padding:10px !important; font-family:Arial, Helvetica, sans-serif; font-size:16px !important;\">
<div style=\"margin:auto !important; width:100% !important; max-width:800px !important;\">

<div style=\"padding:10px !important; padding-top:30px !important;\">
<img src=\"{$directory}images/gen-logo.png\">
</div>

<div style=\"min-height:300px !important; padding:10px !important; background:#fff !important;\">
{$message}
{$regards}
</div>

<p style=\"font-size:14px !important;\">
<span style=\"font-weight:bold !important;\">Email:</span> {$gen_email},<br>
<span style=\"font-weight:bold !important;\">Phone:</span> {$gen_phone},<br>
<span style=\"font-weight:bold !important;\">Website:</span> <a href=\"{$directory}\" style=\"color:#f33 !important; text-decoration:none !important;\">{$domain}</a>.
</p>";
$result .= (!empty($foot_note))?"<p style=\"background:#ddd !important;font-size:12px !important; padding:10px !important; overflow:hidden !important;\">{$foot_note}</p>":"";
$result .= "</div>
</div>

</body>
</html>";
return $result;
}

function send_mail($no=""){
global $to, $subject, $message, $headers, $gen_email;

$message = wordwrap($message,70);
// Always set content-type when sending HTML email
$headers2 = $headers;
$headers = "MIME-Version: 1.0" . "\r\n";
$headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
$headers .= "From: {$headers2}" . "\r\n";
$headers .= ($no == 1)?"BCC: {$gen_email}" . "\r\n":"";

$result = mail($to,$subject,$message,$headers);
return $result;
}

///==============Image Upload Function=========================///
function upload_single_image($feild_name, $uniq_name_par, $url, $width, $height){

global $file_name, $rand_no;

$file_name = $_FILES[$feild_name]["name"]; 
$file_temp_name = $_FILES[$feild_name]["tmp_name"];
$info   = getimagesize($file_temp_name);
$file_size = $_FILES[$feild_name]["size"];
$file_error_message = $_FILES[$feild_name]["error"];
$file_name_2_array = explode(".", $file_name);
$file_extension = end($file_name_2_array);

if (!$file_temp_name) {
    echo "<div class=\"not-success\">ERROR: Please browse for a file before clicking the upload button.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
    exit();
} 
else if($file_size > 5242880) {
    echo "<div class=\"not-success\">ERROR: Your file was larger than 5 Megabytes in size.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
    unlink($file_temp_name);
    exit();
}
else if (!preg_match("/.(gif|GIF|jpg|JPG|png|PNG|jpeg|JPEG)$/i", $file_name) ) {
     echo "<div class=\"not-success\">ERROR: Your image was not .gif, .jpg, .jpeg, or .png.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
     unlink($file_temp_name);
     exit();
}
else if ($file_error_message == 1) {
    echo "<div class=\"not-success\">ERROR: An error occured while processing the file. Try again.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
    exit();
}
else if ($info[2] != 1 && $info[2] != 2 && $info[2] != 3) {
     echo "<div class=\"not-success\">ERROR: Your image was not .gif, .jpg, .jpeg, or .png.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
     exit();
}

foreach (glob("{$url}{$uniq_name_par}*.*") as $filename) {
unlink($filename);
}

$file_name = "1_{$uniq_name_par}{$rand_no}.{$file_extension}";
$move_file = move_uploaded_file($file_temp_name, "{$url}{$file_name}");
if ($move_file != true) {
    echo "<div class=\"not-success\">ERROR: File not uploaded. Try again.</div><button class=\"btn gen-btn\"  onclick=\"javascript:location.reload();\"><i class=\"fa fa-refresh\"></i> Try Again</button>";
    unlink($file_temp_name);
    exit();
}

$target_file = "{$url}{$file_name}";
$resized_file = "{$url}{$uniq_name_par}{$rand_no}.{$file_extension}";
image_resize($target_file, $resized_file, $file_extension, $width, $height);

unlink($target_file);

}

function rename_single_file($old_par, $new_dir, $new_file){
global $file_name;
if(file_exists($old_par)){
copy($old_par, $new_dir . $new_file);
unlink($old_par);
$file_name = $new_file;
}
}

///================================================
function page_numbers(){
global $result, $per_view, $page_link, $link_suffix, $style_class, $center_pages, $pn, $sub1, $last_page, $count, $add_attr;
$count = (empty($count))?count_rows($result):$count;

///////////////////////////////////////////////////////
$pn = (isset($_REQUEST["pn"]) && !empty($_REQUEST["pn"]))?preg_replace("#[^0-9]#i", "", $_REQUEST["pn"]):1;
$total = $count;

$last_page = ceil($total / $per_view);

if ($pn < 1) {
$pn = 1;
} else if ($pn > $last_page && !empty($last_page)) {
$pn = $last_page;
}

$center_pages = "";
$sub4 = $pn - 4;
$sub3 = $pn - 3;
$sub1 = $pn - 1;
$sub2 = $pn - 2;
$add1 = $pn + 1;
$add2 = $pn + 2;
$add3 = $pn + 3;
$add4 = $pn + 4;

$center_pages .= ($pn>1 && $last_page>1)?"<a href=\"{$page_link}{$sub1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">Previous</a>":"";
$center_pages .= ($sub4>0 && $add1>$last_page && $last_page>1)?"<a href=\"{$page_link}{$sub4}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub4}</a>":"";
$center_pages .= ($sub3>0 && $add2>$last_page && $last_page>1)?"<a href=\"{$page_link}{$sub3}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub3}</a>":"";
$center_pages .= ($sub2>0 && $last_page>1)?"<a href=\"{$page_link}{$sub2}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub2}</a>":"";
$center_pages .= ($sub1>0 && $last_page>1)?"<a href=\"{$page_link}{$sub1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$sub1}</a>":"";
$center_pages .= ($last_page>1)?"<a href=\"{$page_link}{$pn}{$link_suffix}\" {$add_attr} class=\"current {$style_class}\">{$pn}</a>":"";
$center_pages .= ($add1<=$last_page && $last_page>1)?"<a href=\"{$page_link}{$add1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add1}</a>":"";
$center_pages .= ($add2<=$last_page && $last_page>1)?"<a href=\"{$page_link}{$add2}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add2}</a>":"";
$center_pages .= ($sub2<1 && $add3<=$last_page && $last_page>1)?"<a href=\"{$page_link}{$add3}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add3}</a>":"";
$center_pages .= ($sub1<1 && $add4<=$last_page && $last_page>1)?"<a href=\"{$page_link}{$add4}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">{$add4}</a>":"";
$center_pages .= ($pn<$last_page && $last_page>1)?"<a href=\"{$page_link}{$add1}{$link_suffix}\" {$add_attr} class=\"{$style_class}\">Next</a>":"";
}
////====================================================

///================Detect Browser===================///////
function det_browser($data){
global $detect;
$result = "";
$result = ( $detect->isMobile() && !$detect->isTablet() ) ? "" : $data;
return $result;
}

///================Calculate Refferal Commission===================///////
function get_random_user(){
global $db;
$result = $db->select("reg_users", "", "DISTINCT id", "");
$count = count_rows($result);
$random_user = "";
if($count > 0){
while($row = fetch_data($result)){
$random_user .= $row["id"] . ",";
}
$random_user = substr($random_user,0,-1);
if($count > 1){
$random_user = explode(",", $random_user);
shuffle($random_user);
$random_user = $random_user[0];
}
}else{
$random_user = 1;
}
return $random_user;
}

function get_level($referrer, $referred, $amount){
global $db;
$result = $db->select("referral_setup", "WHERE id = '1'", "*", "");
$row = fetch_data($result);
$count_depositors = (!empty($row["count_depositors"]))?$row["count_depositors"]:"";
$commission_to_depositors = (!empty($row["commission_to_depositors"]))?row["commission_to_depositors"]:"";
$min_deposit = (!empty($row["min_deposit"]))?$row["min_deposit"]:"";
$max_referral_commission = (!empty($row["max_referral_commission"]))?$row["max_referral_commission"]:"";
$level_1_commission = (!empty($row["level_1_commission"]))?$row["level_1_commission"]:"";
$level_1_min_deposit = (!empty($row["level_1_min_deposit"]))?$row["level_1_min_deposit"]:"";
$level_2_commission = (!empty($row["level_2_commission"]))?$row["level_2_commission"]:"";
$level_2_min_deposit = (!empty($row["level_2_min_deposit"]))?$row["level_2_min_deposit"]:"";
$level_3_commission = (!empty($row["level_3_commission"]))?$row["level_3_commission"]:"";
$level_3_min_deposit = (!empty($row["level_3_min_deposit"]))?$row["level_3_min_deposit"]:"";
$level_4_commission = (!empty($row["level_4_commission"]))?$row["level_4_commission"]:"";
$level_4_min_deposit = (!empty($row["level_4_min_deposit"]))?$row["level_4_min_deposit"]:"";
$level_5_commission = (!empty($row["level_5_commission"]))?$row["level_5_commission"]:"";
$level_5_min_deposit = (!empty($row["level_5_min_deposit"]))?$row["level_5_min_deposit"]:"";
$level_6_commission = (!empty($row["level_6_commission"]))?$row["level_6_commission"]:"";
$level_6_min_deposit = (!empty($row["level_6_min_deposit"]))?$row["level_6_min_deposit"]:"";
$level_7_commission = (!empty($row["level_7_commission"]))?$row["level_7_commission"]:"";
$level_7_min_deposit = (!empty($row["level_7_min_deposit"]))?$row["level_7_min_deposit"]:"";
$level_8_commission = (!empty($row["level_8_commission"]))?$row["level_8_commission"]:"";
$level_8_min_deposit = (!empty($row["level_8_min_deposit"]))?$row["level_8_min_deposit"]:"";
$level_9_commission = (!empty($row["level_9_commission"]))?$row["level_9_commission"]:"";
$level_9_min_deposit = (!empty($row["level_9_min_deposit"]))?$row["level_9_min_deposit"]:"";
$level_10_commission = (!empty($row["level_10_commission"]))?$row["level_10_commission"]:"";
$level_10_min_deposit = (!empty($row["level_10_min_deposit"]))?$row["level_10_min_deposit"]:"";
$referrer_deposits = in_table("SUM(earning) AS Total","deposits","WHERE user_id = '$referrer'","Total");

$referred_users = "";
$level_interval = in_table("level_interval","referral_setup","WHERE id = '1'","level_interval");
$total_commission = 0;

$result = $db->select("referred_users", "WHERE referred_by = '$referrer'", "*", "");
if(count_rows($result) > 0){
while($row = fetch_data($result)){
if(!empty($count_depositors)){
$users_deposit = in_table("SUM(earning) AS Total","deposits","WHERE user_id = '" . $row["referred_user"] . "'","Total");
$referred_users .= ($min_deposit <= $users_deposit) ? $row["referred_user"] . "," : "";
}else{
$referred_users .= $row["referred_user"] . ",";
}
}
$referred_users = substr($referred_users,0,-1);
$referred_users = explode(",", $referred_users);
$referred_position = array_search($referred,$referred_users,true); 
$referred_position += 1; 
$used_level = $referred_position/$level_interval;
if($used_level > 9 && !empty($level_10_commission) && !empty($level_10_min_deposit) && $amount >= $level_10_min_deposit){
$total_commission = $amount * $level_10_commission/100;
}else if($used_level > 8 && !empty($level_9_commission) && !empty($level_9_min_deposit) && $amount >= $level_9_min_deposit){
$total_commission = $amount * $level_9_commission/100;
}else if($used_level > 7 && !empty($level_8_commission) && !empty($level_8_min_deposit) && $amount >= $level_8_min_deposit){
$total_commission = $amount * $level_8_commission/100;
}else if($used_level > 6 && !empty($level_7_commission) && !empty($level_7_min_deposit) && $amount >= $level_7_min_deposit){
$total_commission = $amount * $level_7_commission/100;
}else if($used_level > 5 && !empty($level_6_commission) && !empty($level_6_min_deposit) && $amount >= $level_6_min_deposit){
$total_commission = $amount * $level_6_commission/100;
}else if($used_level > 4 && !empty($level_5_commission) && !empty($level_5_min_deposit) && $amount >= $level_5_min_deposit){
$total_commission = $amount * $level_5_commission/100;
}else if($used_level > 3 && !empty($level_4_commission) && !empty($level_4_min_deposit) && $amount >= $level_4_min_deposit){
$total_commission = $amount * $level_4_commission/100;
}else if($used_level > 2 && !empty($level_3_commission) && !empty($level_3_min_deposit) && $amount >= $level_3_min_deposit){
$total_commission = $amount * $level_3_commission/100;
}else if($used_level > 1 && !empty($level_2_commission) && !empty($level_2_min_deposit) && $amount >= $level_2_min_deposit){
$total_commission = $amount * $level_2_commission/100;
}else if($used_level > 0 && !empty($level_1_commission) && !empty($level_1_min_deposit) && $amount >= $level_1_min_deposit){
$total_commission = $amount * $level_1_commission/100;
}
if(!empty($max_referral_commission) && $total_commission > $max_referral_commission){
$total_commission = $max_referral_commission;
}
if(!empty($commission_to_depositors) && $referrer_deposits < $min_deposit){
$total_commission = 0;
}
}

return $total_commission;
}

function calculate_commission($referrer, $referred, $amount){
global $db, $date_time;

$total_commission = 0;

$result = $db->select("referral_setup", "Where id = '1'", "*", "");
if(count_rows($result) == 1){
$row = fetch_data($result);
$use_referral = (!empty($row["use_referral"]))?$row["use_referral"]:"";
$solid_commision = (!empty($row["solid_commision"]))?$row["solid_commision"]:"";
$solid_commission_amount = (!empty($row["solid_commission_amount"]))?$row["solid_commission_amount"]:"";
$commission_to_depositors = (!empty($row["commission_to_depositors"]))?row["commission_to_depositors"]:"";
$count_depositors = (!empty($row["count_depositors"]))?$row["count_depositors"]:"";
$disallow_commission = (!empty($row["disallow_commission"]))?$row["disallow_commission"]:"";
$referral_programs_option = (!empty($row["referral_programs_option"]))?$row["referral_programs_option"]:"";
$select_program_name1 = (!empty($row["select_program_name1"]))?$row["select_program_name1"]:"";
$program_name1 = (!empty($row["program_name1"]))?$row["program_name1"]:"";
$program_name1_from = (!empty($row["program_name1_from"]))?$row["program_name1_from"]:"";
$program_name1_to = (!empty($row["program_name1_to"]))?$row["program_name1_to"]:"";
$program_name1_commission = (!empty($row["program_name1_commission"]))?$row["program_name1_commission"]:"";
$select_program_name2 = (!empty($row["select_program_name2"]))?$row["select_program_name2"]:"";
$program_name2 = (!empty($row["program_name2"]))?$row["program_name2"]:"";
$program_name2_from = (!empty($row["program_name2_from"]))?$row["program_name2_from"]:"";
$program_name2_to = (!empty($row["program_name2_to"]))?$row["program_name2_to"]:"";
$program_name2_commission = (!empty($row["program_name2_commission"]))?$row["program_name2_commission"]:"";
$select_program_name3 = (!empty($row["select_program_name3"]))?$row["select_program_name3"]:"";
$program_name3 = (!empty($row["program_name3"]))?$row["program_name3"]:"";
$program_name3_from = (!empty($row["program_name3_from"]))?$row["program_name3_from"]:"";
$program_name3_to = (!empty($row["program_name3_to"]))?$row["program_name3_to"]:"";
$program_name3_commission = (!empty($row["program_name3_commission"]))?$row["program_name3_commission"]:"";
$min_deposit = (!empty($row["min_deposit"]))?$row["min_deposit"]:"";
$max_referral_commission = (!empty($row["max_referral_commission"]))?$row["max_referral_commission"]:"";
$referrer_deposits = in_table("SUM(earning) AS Total","deposits","WHERE user_id = '$referrer'","Total");

/////========Starts the Calculation=======///////
if(!empty($use_referral)){

if(!empty($referral_programs_option)){

if(!empty($select_program_name1) && !empty($program_name1_from) && !empty($program_name1_to) && !empty($program_name1_commission) && $amount >= $program_name1_from && $amount <= $program_name1_to){
$total_commission = $amount * $program_name1_commission/100;
}else if(!empty($select_program_name2) && !empty($program_name2_from) && !empty($program_name2_to) && !empty($program_name2_commission) && $amount >= $program_name2_from && $amount <= $program_name2_to){
$total_commission = $amount * $program_name2_commission/100;
}else if(!empty($select_program_name3) && !empty($program_name3_from) && !empty($program_name3_to) && !empty($program_name3_commission) && $amount >= $program_name3_from && $amount <= $program_name3_to){
$total_commission = $amount * $program_name2_commission/100;
}

}else{
$total_commission = get_level($referrer, $referred, $amount);
}

if(!empty($solid_commision) && !empty($solid_commission_amount)){
$total_commission = $solid_commission_amount;
}

if(!empty($commission_to_depositors) && $referrer_deposits < $min_deposit){
$total_commission = 0;
}

}
/////==========Ends the Calculation==========////////////

}

if(!empty($total_commission)){
$data_array = array(
"user_id" => $referrer,
"amount" => $total_commission,
"date_time" => $date_time
);
$db->insert2($data_array, "referral_commisions");
}

}

//////===========Texts Functions==============//////

function testTotal($amount){
$amountReturn = preg_replace('#[^0-9.]#i', '', $amount);
$amountReturn = test_input($amountReturn);
$amountReturn = str_replace(",","",$amountReturn);
$amountReturn = str_replace("-","",$amountReturn);
$amountPos = strpos($amountReturn,".");
if($amountPos > 0){
$amountReturn = substr($amountReturn,0,$amountPos+3);
}
return $amountReturn;
}

function testQty($amount){
$amountReturn = preg_replace('#[^0-9]#i', '', $amount);
$amountReturn = test_input($amountReturn);
$amountReturn = str_replace(",","",$amountReturn);
$amountReturn = str_replace("-","",$amountReturn);
$amountPos = strpos($amountReturn,".");
if($amountPos > 0){
$amountReturn = substr($amountReturn,0,$amountPos);
}
return $amountReturn;
}

function formatNumber($amount){
$amountOriginal = "{$amount}";
if($amountOriginal != ""){
$sign_left = ($amountOriginal < 0)?"(":"";
$sign_right = ($amountOriginal < 0)?")":"";
$amountOriginal = $sign_left . number_format(abs($amountOriginal), 2, '.', ',') . $sign_right;
}
return $amountOriginal;
}

function formatQty($amount){
$amountOriginal = "{$amount}";
if($amountOriginal != ""){
$amountOriginal = number_format($amountOriginal, 0, '', ',');
}
return $amountOriginal;
}
?>